{
	"name": "DimCustomer",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "SrcRawSalesCustomer"
				},
				{
					"name": "SrcCustomerCategories"
				},
				{
					"name": "SrcDeliveryMethod"
				},
				{
					"name": "SrcCities"
				},
				{
					"name": "SrcStateProvinces"
				},
				{
					"name": "SrcCountries"
				}
			],
			"sinks": [
				{
					"name": "sinkDimCustomer"
				}
			],
			"transformations": [
				{
					"name": "SelectCustomerAttributes"
				},
				{
					"name": "SelectCustomerCategoryAttributes"
				},
				{
					"name": "JoinCustomerCategories"
				},
				{
					"name": "JoinDeliveryMethod"
				},
				{
					"name": "JoinCities"
				},
				{
					"name": "JoinStateProvinces"
				},
				{
					"name": "JoinCountries"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          BuyingGroupID as integer,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as integer,",
				"          DeliveryMethodID as integer,",
				"          DeliveryCityID as integer,",
				"          PostalCityID as integer,",
				"          CreditLimit as decimal(18,2),",
				"          AccountOpenedDate as date,",
				"          StandardDiscountPercentage as decimal(18,3),",
				"          IsStatementSent as boolean,",
				"          IsOnCreditHold as boolean,",
				"          PaymentDays as integer,",
				"          PhoneNumber as string,",
				"          FaxNumber as string,",
				"          DeliveryRun as string,",
				"          RunPosition as string,",
				"          WebsiteURL as string,",
				"          DeliveryAddressLine1 as string,",
				"          DeliveryAddressLine2 as string,",
				"          DeliveryPostalCode as string,",
				"          PostalAddressLine1 as string,",
				"          PostalAddressLine2 as string,",
				"          PostalPostalCode as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'raw_WideWorldImporters',",
				"     tableName: 'Sales_Customers') ~> SrcRawSalesCustomer",
				"source(output(",
				"          CustomerCategoryID as integer,",
				"          CustomerCategoryName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'raw_WideWorldImporters',",
				"     tableName: 'Sales_CustomerCategories') ~> SrcCustomerCategories",
				"source(output(",
				"          DeliveryMethodID as integer,",
				"          DeliveryMethodName as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'raw_WideWorldImporters',",
				"     tableName: 'Application_DeliveryMethods') ~> SrcDeliveryMethod",
				"source(output(",
				"          CityID as integer,",
				"          CityName as string,",
				"          StateProvinceID as integer,",
				"          LatestRecordedPopulation as long,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'raw_WideWorldImporters',",
				"     tableName: 'Application_Cities') ~> SrcCities",
				"source(output(",
				"          StateProvinceID as integer,",
				"          StateProvinceCode as string,",
				"          StateProvinceName as string,",
				"          CountryID as integer,",
				"          SalesTerritory as string,",
				"          LatestRecordedPopulation as long,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'raw_WideWorldImporters',",
				"     tableName: 'Application_StateProvinces') ~> SrcStateProvinces",
				"source(output(",
				"          CountryID as integer,",
				"          CountryName as string,",
				"          FormalName as string,",
				"          IsoAlpha3Code as string,",
				"          IsoNumericCode as integer,",
				"          CountryType as string,",
				"          LatestRecordedPopulation as long,",
				"          Continent as string,",
				"          Region as string,",
				"          Subregion as string,",
				"          LastEditedBy as integer,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'raw_WideWorldImporters',",
				"     tableName: 'Application_Countries') ~> SrcCountries",
				"SrcRawSalesCustomer select(mapColumn(",
				"          CustomerID,",
				"          CustomerName,",
				"          BillToCustomerID,",
				"          CustomerCategoryID,",
				"          BuyingGroupID,",
				"          PrimaryContactPersonID,",
				"          AlternateContactPersonID,",
				"          DeliveryMethodID,",
				"          DeliveryCityID,",
				"          PostalCityID,",
				"          CreditLimit,",
				"          AccountOpenedDate,",
				"          StandardDiscountPercentage,",
				"          IsStatementSent,",
				"          IsOnCreditHold,",
				"          PaymentDays,",
				"          PhoneNumber,",
				"          FaxNumber,",
				"          DeliveryRun,",
				"          RunPosition,",
				"          WebsiteURL,",
				"          DeliveryAddressLine1,",
				"          DeliveryAddressLine2,",
				"          DeliveryPostalCode,",
				"          PostalAddressLine1,",
				"          PostalAddressLine2,",
				"          PostalPostalCode,",
				"          LastEditedBy,",
				"          ValidFrom,",
				"          ValidTo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCustomerAttributes",
				"SrcCustomerCategories select(mapColumn(",
				"          CustomerCategoryID,",
				"          CustomerCategoryName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCustomerCategoryAttributes",
				"SelectCustomerAttributes, SrcCustomerCategories join(SelectCustomerAttributes@CustomerCategoryID == SrcCustomerCategories@CustomerCategoryID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> JoinCustomerCategories",
				"JoinCustomerCategories, SrcDeliveryMethod join(SelectCustomerAttributes@DeliveryMethodID == SrcDeliveryMethod@DeliveryMethodID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> JoinDeliveryMethod",
				"JoinDeliveryMethod, JoinCountries join(DeliveryCityID == CityID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> JoinCities",
				"SrcCities, SrcStateProvinces join(SrcCities@StateProvinceID == SrcStateProvinces@StateProvinceID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> JoinStateProvinces",
				"JoinStateProvinces, SrcCountries join(SrcStateProvinces@CountryID == SrcCountries@CountryID,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> JoinCountries",
				"JoinCities sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'dwh_Retail',",
				"     tableName: 'DimCustomer',",
				"     recreate:true,",
				"     input(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          BillToCustomerID as integer,",
				"          CustomerCategoryID as integer,",
				"          CustomerCategoryName as string,",
				"          BuyingGroupID as integer,",
				"          PrimaryContactPersonID as integer,",
				"          AlternateContactPersonID as integer,",
				"          DeliveryMethodName as string,",
				"          CityName as string,",
				"          CityLatestRecordedPopulation as long,",
				"          StateProvinceCode as string,",
				"          StateProvinceName as string,",
				"          SalesTerritory as string,",
				"          CountryName as string,",
				"          FormalName as string,",
				"          IsoAlpha3Code as string,",
				"          CountryType as string,",
				"          CreditLimit as decimal(18,2),",
				"          IsStatementSent as boolean,",
				"          IsOnCreditHold as boolean,",
				"          PaymentDays as integer,",
				"          RunPosition as string,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp",
				"     ),",
				"     mapColumn(",
				"          CustomerID,",
				"          CustomerName,",
				"          CustomerCategoryName,",
				"          DeliveryMethodName,",
				"          CityName,",
				"          CityLatestRecordedPopulation = SrcCities@LatestRecordedPopulation,",
				"          StateProvinceCode,",
				"          StateProvinceName,",
				"          SalesTerritory,",
				"          CountryName,",
				"          FormalName,",
				"          IsoAlpha3Code,",
				"          CountryType,",
				"          CreditLimit,",
				"          IsStatementSent,",
				"          IsOnCreditHold,",
				"          PaymentDays,",
				"          RunPosition,",
				"          ValidFrom = SelectCustomerAttributes@ValidFrom,",
				"          ValidTo = SelectCustomerAttributes@ValidTo",
				"     )) ~> sinkDimCustomer"
			]
		}
	}
}