{
	"name": "Ingest - Table",
	"properties": {
		"activities": [
			{
				"name": "Copy - Table",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "SourceTable",
						"value": "[@{pipeline().parameters.SchemaName}].[@{pipeline().parameters.TableName}]"
					},
					{
						"name": "DestinationFile",
						"value": "lake/raw/@{pipeline().parameters.Application}/@{pipeline().parameters.Confidentiality}/@{pipeline().parameters.SchemaName}_@{pipeline().parameters.TableName}"
					}
				],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_WWI_Table",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.SchemaName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Parquet_Table",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.SchemaName",
								"type": "Expression"
							},
							"Confidentiality": {
								"value": "@pipeline().parameters.Confidentiality",
								"type": "Expression"
							},
							"Application": {
								"value": "@pipeline().parameters.Application",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"TableName": {
				"type": "string"
			},
			"SchemaName": {
				"type": "string"
			},
			"Application": {
				"type": "string"
			},
			"Confidentiality": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Tools"
		},
		"annotations": []
	}
}